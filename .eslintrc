{
  "plugins": [
    "prettier",
    "import",
  ],
  "extends": [
    "next",
    "next/core-web-vitals",
    "prettier"
  ],
  "rules": {
    "prettier/prettier": "error",
    "camelcase": "off",
    "import/prefer-default-export": "off",
    "react/jsx-filename-extension": "off",
    "react/jsx-props-no-spreading": "off",
    "react/no-unused-prop-types": "off",
    "react/require-default-props": "off",
    "quotes": "off",
    "jsx-a11y/anchor-is-valid": [
      "error",
      {
        "components": [
          "Link"
        ],
        "specialLink": [
          "hrefLeft",
          "hrefRight"
        ],
        "aspects": [
          "invalidHref",
          "preferButton"
        ]
      }
    ]
  },
  "overrides": [
    {
      "files": "**/*.+(ts|tsx)",
      "parser": "@typescript-eslint/parser",
      "plugins": [
        "@typescript-eslint/eslint-plugin",
        "import"
      ],
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "prettier"
      ],
      "settings": {
        "import/parsers": {
          "@typescript-eslint/parser": [
            ".ts",
            ".tsx"
          ]
        },
        "import/resolver": {
          "typescript": {
            "alwaysTryTypes": true // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
          }
        },
      },
      "rules": {
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "no-use-before-define": "off",
        "react/jsx-key": "off",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/quotes": [
          2,
          "backtick",
          {
            "avoidEscape": true
          }
        ],
        "import/extensions": [
          "error",
          "ignorePackages",
          {
            "ts": "never",
            "tsx": "never",
            "js": "never",
            "jsx": "never"
          }
        ]
      }
    }
  ]
}
